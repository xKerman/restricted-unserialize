language: php
sudo: required
service:
  - docker

env:
  global:
    - secure: "GnzjJGQ7mWc5UjkveJb2JXcYgy7AlVK3dcphU4XQ2EYSNMeRL1KKpteiNdIwfbhgatCWgjwddqtyvmxC3pWjr3GB0UWPVAZnxOdZ4e/JuhWEcH5H1UX0o3H6kyzY0lz7vaFrQ0rZPgUTzeZBmZ271XZxgeqGEPD9kijWtlWcrZ6BzvG7WrMUEJLNXC5vYmEuDYy9azsM4vKSOhzNan+Zv7x3Fid8so89hlshYCzfqdYFm4d0NTVQdgsjuQjgb59Fuea6hoj80yhWlSXwMvnBZLVA53s5LLJeP7mZKZI+ToK9fpVq+ucyosVBy+CbFB191D44WS36HA1vvJ7w8OStxubfQnTez6sjKQ13vv8l28yJ3P++EVm9gb1aE+WY/KjMv6RMLEVkNDfq0E8OPKvMVrAhLC9KKkkG34035ZRosiKkPpz3xgYVnBjJbsUP7akfng+yxI65Ifd1CuT5HzzJyAzQRfpBN7GjDVv2qbqSnK6STdAPT1/Jtdote4vrWijrnrAXHryL6Kjg+2AZdSlIPaHNXq3aCX1CfWqPUcTiu4clNG1haFk2BS8KgpqO6O8yAm/BehatoAhrNP3fgo+9tUrqIuGgvzRJSiS7jXQ/H6Q7wd7Iyj8NsnMj6Lik+e4W9Rj+od5I6peFfr0ZhQQ/5zfUEqfzh3GxCxfnfsE3sn8="

php: dummy                  # this is needed for allow_failures setting

stages:
  - name: test
  - name: check dependencies
    if: type = cron

jobs:
  allow_failures:
    - php: nightly

  exclude:
    - php: dummy

  include:
    - &test
      stage: test
      php: nightly
      sudo: false
      env: USE_DOCKER=0 PHP_VERSION=nightly TEST=test-full
      before_install:
        - if [ $USE_DOCKER -eq 1 ]; then docker build -t xkerman/php-$PHP_VERSION -f docker/Dockerfile.$PHP_VERSION docker; fi
      install:
        - rm composer.lock
        - if [ $USE_DOCKER -eq 0 ]; then composer install --no-interaction; fi
        - if [ $USE_DOCKER -eq 1 ]; then curl -s -O https://getcomposer.org/composer.phar; fi
        - if [ $TEST = 'test-full' ]; then php phive.phar --no-progress install --copy --force-accept-unsigned --trust-gpg-keys 31C7E470E2138192,4AA394086372C20A,0F9684B8B16B7AB0; fi
        - if [ $DRIVER = 'pcov' ]; then pecl install pcov; fi
      script:
        - if [ $USE_DOCKER -eq 0 ]; then composer $TEST; fi
        - if [ $USE_DOCKER -eq 1 -a $PHP_VERSION != '5.2' ]; then docker run -v $(pwd):/tmp  -w /tmp xkerman/php-$PHP_VERSION sh -c 'php -v && php -d memory_limit=-1 composer.phar install --no-interaction && php composer.phar test-simple'; fi
        - if [ $USE_DOCKER -eq 1 -a $PHP_VERSION = '5.2' ]; then git diff --exit-code -- generated; fi
        - if [ $USE_DOCKER -eq 1 -a $PHP_VERSION = '5.2' ]; then docker run -v $(pwd):/tmp  -w /tmp xkerman/php-$PHP_VERSION sh -c 'php -v && php /usr/local/php/phpunit/phpunit.php --configuration phpunit.php52.xml'; fi
      after_success:
        - if [ $USE_DOCKER -eq 1 ]; then sudo chown -R $(whoami) ./report; fi
        - bash <(curl -s https://codecov.io/bash) -c -F $(echo $PHP_VERSION | sed -e 's/\./_/g')
    - <<: *test
      php: '7.4'
      sudo: false
      env: USE_DOCKER=0 PHP_VERSION=7.4 TEST=test-full DRIVER=pcov
    - <<: *test
      php: '7.3'
      sudo: false
      env: USE_DOCKER=0 PHP_VERSION=7.3 TEST=test-simple DRIVER=pcov
    - <<: *test
      php: '7.2'
      sudo: false
      env: USE_DOCKER=0 PHP_VERSION=7.2 TEST=test-simple DRIVER=pcov
    - <<: *test
      php: '7.1'
      sudo: false
      env: USE_DOCKER=0 PHP_VERSION=7.1 TEST=test-simple DRIVER=pcov
    - <<: *test
      php: '7.0'
      sudo: false
      env: USE_DOCKER=0 PHP_VERSION=7.0 TEST=test-simple DRIVER=xdebug
    - <<: *test
      php: '5.6'
      sudo: false
      env: USE_DOCKER=0 PHP_VERSION=5.6 TEST=test-simple DRIVER=xdebug
    - <<: *test
      php: '5.6'
      sudo: required
      env: USE_DOCKER=1 PHP_VERSION=5.5
    - <<: *test
      php: '5.6'
      sudo: required
      env: USE_DOCKER=1 PHP_VERSION=5.4
    - <<: *test
      php: '5.6'
      sudo: required
      env: USE_DOCKER=1 PHP_VERSION=5.3
    - <<: *test
      php: '5.6'
      sudo: required
      env: USE_DOCKER=1 PHP_VERSION=5.2

    - stage: check dependencies
      php: 7.4
      sudo: false
      install:
        - composer install
      script:
        - composer outdated --direct --strict
